# This Action will automate a new release if the version has changed within the `package.json`
name: Release

on:
  workflow_run:
    workflows:
      - "Standards"
    types:
      - completed
  workflow_dispatch:

env:
  NODE_VERSION: 18
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
      type: ${{ steps.check.outputs.type }}
      version: ${{ steps.check.outputs.version }}
      commit: ${{ steps.check.outputs.commit }}

    steps:
    - name: Checkout the latest code
      uses: actions/checkout@v4

    # This step will check if the version in the 'package.json' has been modified
    - name: Check Version
      id: check
      uses: EndBug/version-check@v2
      #swith:
        # Since we trigger this action via `workflow_run` we fail to have some values
        # this module expects, the below option should make them work together
        #static-checking: localIsNew
        #file-url: https://raw.githubusercontent.com/confused-Techie/student-point-tracker/main/package.json

    - name: Setup NodeJS - ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    needs: check
    if: needs.check.outputs.changed == 'true'

    steps:
    - name: Install Dependencies
      run: npm install

    - name: Test
      run: npm test

  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.github_release.outputs.upload_url }}
    needs: [test, check]
    if: needs.test.outcome == 'success'

    steps:
    - name: Release New GitHub Tag
      uses: actions-ecosystem/action-push-tag@v1
      with:
        tag: 'v${{ needs.check.outputs.version }}'
        message: '${{ needs.check.outputs.version }}'

    - name: Create new GitHub Release
      id: github_release
      uses: actions/create-release@v1
      with:
        tag_name: 'v${{ needs.check.outputs.version }}'
        release_name: 'Release v${{ needs.check.outputs.version }}'
        draft: false
        prerelease: false
        body: Automate this later ;)

    - name: Login to the Container Registry
      uses: docker/login-action@latest
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@latest
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build & Push Docker Image
      uses: docker/build-push-action@latest
      with:
        context: .
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: 'ghcr.io/confused-techie/${{ env.IMAGE_NAME }}:v${{ needs.check.outputs.version }}'

  assets:
    runs-on: windows-latest
    needs: [release, check]
    if: needs.release.outcome == 'success'

    steps:
    - name: Generate Binaries
      run: npm run build

    - name: Upload Binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./dist/student-point-tracker.exe
        asset_name: 'spt-v${{ needs.check.outputs.version }}.exe'
        asset_content_type: application/exe
